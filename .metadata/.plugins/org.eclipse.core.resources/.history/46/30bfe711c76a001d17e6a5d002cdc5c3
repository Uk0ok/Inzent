package com.ecm.proc;
import java.io.File;
import java.io.FileReader;
import java.util.Properties;

import org.apache.log4j.Logger;

public class Proc_Main {

	private static Logger log = Logger.getLogger("main");
	
	public static String DB_DRIVER = null;
	public static String DB_URL = null;
	public static String DB_ID = null;
	public static String DB_PW = null;
	
	public static String ECM_IP = null;
	public static int ECM_PORT = 2102;
	public static String ECM_ID = null;
	public static String ECM_PW = null;
	public static String ECM_GW = null;
	public static String ECM_FILTERNAME = null;
	public static String ECM_FILTERPARAM = null;

	public static String disk = null;
	public static int threadcnt = 1;
	public static int rownum = 1000;
	public static int diskSize = 0;
	
	public static String DOWNBASEDIR = null;
	public static String REPLACEDIR = null;
	public static String CREATEDIR = null;
	public static String MODE = null;
	
	public static int err_cnt = 0;
	
	public static void main(String[] args) {
		log.debug(" -- Process Start -- ");
		
		//Properties load
		try {
			FileReader fr = new FileReader("./conf/conf.properties");
			Properties properties = new Properties();
			properties.load(fr);
			
			DB_DRIVER = properties.getProperty("DB.DRIVER");
			DB_URL    = properties.getProperty("DB.URL");
			DB_ID 	  = properties.getProperty("DB.ID");
			DB_PW 	  = properties.getProperty("DB.PW");
			rownum = Integer.parseInt(properties.getProperty("DB.ROWNUM"));
			
			ECM_IP  = properties.getProperty("ECM.IP");
			ECM_PORT= Integer.parseInt(properties.getProperty("ECM.PORT"));
			ECM_ID  = properties.getProperty("ECM.ID");
			ECM_PW  = properties.getProperty("ECM.PW");
			ECM_GW  = properties.getProperty("ECM.GW");
			ECM_FILTERNAME  = properties.getProperty("ECM.ECM_FILTERNAME");
			ECM_FILTERPARAM  = properties.getProperty("ECM.ECM_FILTERPARAM");

			disk = properties.getProperty("PROC.DISK");
			diskSize = Integer.parseInt(properties.getProperty("PROC.DISK_SIZE"));
			threadcnt = Integer.parseInt(properties.getProperty("PROC.THREADCNT"));
			
			DOWNBASEDIR = properties.getProperty("PROC.DOWNBASEDIR");
			REPLACEDIR = properties.getProperty("PROC.REPLACEDIR");
			CREATEDIR = properties.getProperty("PROC.CREATEDIR");
			MODE = properties.getProperty("PROC.MODE").toUpperCase();
			
		} catch (Exception e) {
			log.error(" Properties Load Error, "+ e.getMessage());
		}
		
		//stop flag delet
		File sfile = new File("./stop.flg");
		if(sfile.exists()) {
			sfile.delete();
		}
		
		//Thread
		Proc_Call pcall = new Proc_Call();
		pcall.Proc_call();
	
		log.debug(" -- Process End -- ");
	}
}